  initContainer

    它是一种专用的容器，在应用容器启动之前运行，并包括一些应用镜像中不存在的实用工具和安装脚本。

  Init 容器能做什么？

    因为 Init 容器具有与应用容器分离的单独镜像，它们的启动相关代码具有如下优势：

      它们可以包含并运行实用工具，出于安全考虑，是不建议在应用容器镜像中包含这些实用工具的。
      它们可以包含用于安装的工具和定制化代码，这些都是在应用镜像中没有的。例如，创建镜像没必要 FROM 另一个镜像，只需要在安装过程中使用类似 sed、 awk、 python 或 dig 这样的工具。
      应用镜像可以分离出创建和部署的角色，而没有必要联合它们构建一个单独的镜像。
      它们使用 Linux Namespace，所以对应用容器具有不同的文件系统视图。因此，它们能够具有访问 Secret 的权限，而应用容器不能够访问。
      它们在应用容器启动之前运行完成，然而应用容器并行运行，所以 Init 容器提供了一种简单的方式来阻塞或延迟应用容器的启动，直到满足了一组先决条件。



  <case> tomcat + war  in one pod.
  
    image: 1.war(Dockerfile)  2.tomcat
    volumeMounts: app-volume

  [nodes]

  War file:
    /home/hello.war

  war image:  copy war files & volumeMount
    docker build -f Dockerfile -t resouer/sample:v2 .

  Pod:        
    ./cre  initcontainer.yaml
  

