[git]
> ignore folder
echo node_modules  > .gitignore

> Case:  new branch , master merge
git checkout -b user       # create new branch
git add .
git commit -m " "
git push -u origin user    # create & push to remote git 
git checkout master        # master merge
git merge user
git push

>branch XXX push
git branch
...   // add commit
git push -u origin XXX

>merge master & push
git status
git add .
git commit -m "xx"
git branch            // check branch status
git checkout master
git merge XXX         // XXX is branch name
git push
git checkout XXX      // choose into some branch

>fetch branch
git branch -a           //查看本地是否具有dev分支，这一步其实意义不大
git fetch origin dev   //把远程分支拉到本地
git checkout -b dev origin/dev   //在本地创建分支dev并切换到该分支
git pull origin dev              //把某个分支的内容拉到本地

>clean files
git rm -r --cached some-directory
git commit -m "Remove the now ignored directory some-directory"
git push


[tcp]
tcpdump -nn -q -i eth0

efficiency
time [CMD] # show do this cmd cost times

whatis
# Serial Number,ModelName
dmidecode

# CPU physical/cpu cores/total
lscpu
cat /proc/cpuinfo |grep "physical id" | sort | uniq | wc -l    
cat /proc/cpuinfo | grep "cpu cores" | uniq
cat /proc/cpuinfo | grep "processor" | wc -l
# Ethernet controller
lspci | grep Ether

# Memory Type
dmidecode -t memory
dmidecode | grep -A16 "Memory Device$" | grep Memory | wc -l

echo 1 > /proc/sys/vm/drop_caches #To free pagecache
echo 2 > /proc/sys/vm/drop_caches #To free dentries and inodes
echo 3 > /proc/sys/vm/drop_caches #To free pagecache, dentries and inodes


# Disk Type
df -Th
mount | grep "^/dev"  
lsblk -f 
blkid /dev/sda1
file -sL /dev/sda1
grep ^ /sys/block/*/queue/rotational   #return 1 is HDD else SSD
#--# find big disk
du -h --max-depth=1


#OS
cat /etc/issue 
#kernel
uname -r
#mod list
lsmod
#hostname
cat /etc/sysconfig/network | grep HOSTNAME  | cut -c 10-30
hostnamectl set-hostname HOSTNAME
#IP
hostname -i
ifconfig|grep -E "([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})" | awk '{print $2}' | cut -d ":" -f2
#DNS
cat /etc/resolv.conf | grep nameserver
#PortServices
netstat -antlp
#runtime status 
systemctl status
#FQDN
hostname -f

#net
ethtool [ethX]     #mode speed 
nmcli connection show     #show connect stats
ip -s link show [ethX]     # Rx Tx

watch ifconfig
watch cat /proc/net/dev

# history 
## OS starting time
date -d "$(awk -F. '{print $1}' /proc/uptime) second ago" +"%Y-%m-%d %H:%M:%S" 
## OS running time
cat /proc/uptime| awk -F. '{run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf("Running：%dD%dT%dM%dS",run_days,run_hour,run_minute,run_second)}'

# history size
cat /etc/profile | grep "^HISTSIZE"

# history without number
history | cut -c 28-

Bigger

#Files
合并列
paste 4 5
 David Cameron	Engela Merkel
 Narendra Modi	Vladimir Putin
join 1 2
 1 India New Delhi
 2 UK London
 3 Canada Toronto
 4 US Washington
 5 Ireland Dublin
去除重复
uniq 
显示重复
uniq -d
替换 小写换大写
tr '[a-z]' '[A-Z]' < 5
 ENGELA MERKEL
 VLADIMIR PUTIN


chattr +i /root/.ssh/authorized_keys      # lock files cant change
chattr -i /root/.ssh/authorized_keys

du -s * | sort -nr | sed 1q | awk {'print $2'}
du -sh * | sort -n
ls -l|sort -nr +4 -5
find . -type f -size +800M  -print0 | xargs -0 du -h | sort -nr
grep 'preweb' /data/logs/nginx/access.log | awk -F ',' '{print $4}' | sort | uniq -c | sort -nr

# find subfloder files and clean
find floder -type f -name "*.tmp" -exec rm -rf {} \;

#The Older Files
find -type f -printf '%T+ %p\n' | sort | head -n 1

#The News Files
find -type f -printf '%T+ %p\n' | sort | tail -n 5

##
ls -sh
du -sh

ls -lrt   # sort the files

### find group floders file contents
grep -R --include="*.php" "/opt/zbox" /home/app

#Folder
find -type f -exec stat -c "%s %n" {} \; | sort -nr | sed 3q | awk '{print $2}'





Last-Time
find -type f -printf '%a+ %p\n' | sort | head -n 1
find -type f -printf '%a+ %p\n' | sort | tail -n 1

#Last edit
find ./ -mtime -1 -type f -exec ls -l {} \; | awk '{print $9}'

find ./ -mtime -1 -type f -exec rm {} \; 


#Swap   #gitlab need swap
dd if=/dev/zero of=/home/swapfile bs=1M count=8192
/sbin/mkswap /home/swapfile
/sbin/swapon /home/swapfile
free -h

cat >>/etc/fstab   << EOF
/home/swapfile  swap swap defaults 0 0
EOF


#Create Swapfile to EX swap 
dd if=/dev/zero of=/data/swapfile bs=1024 count=65535
mkswap /data/swapfile -f
/sbin/swapon /data/swapfile 
cat >> /etc/fstab
/data/swapfile	none	swap	sw	0	0
#remove swapfile
/sbin/swapoff /data/swapfile 






### capability ###
yum info sysstat

# Proc 
pidstat 1				   #Each Time Get CPU 
pstree -pc [Pro name]
lsof -c  [Pro name]        #Show Pro open files
lsof -g [gid]			   #Show group id open files
lsof -g [pid]			   #show PID open files

lsof -i :[port number]     #show which app use this port
lsof -i tcp:[port number]  #port Pro info
lsof -i udp@127.0.0.1:123

pgrep -lo [Pro]			   #Find PID
pgrep -f [Pro]			   #Find Pro All PID

ps -ef |awk '($8 ~/nginx/){print $2}'   # find pid where rows 8 name is nginx
pstree -p            #process Tree

#CPU
systemd-cgtop      # top cpu memory tasks
vmstat
sar -u 1				   #Total CPU info
mpstat -P ALL 1			   #Each CPU info
sar -P 0 				   #No. 0 CPU info 
iostat -c				   
uptime



sar -P [cpu count NO.]
sar -r
sar -d



# memory
free -m
free -bs 1				   
watch -n 1 -d free		   #watch iostat vmstat 
sar -r 1 3				   #show AVG 
ps -aux | sort -k4nr | head -10	   #top 10

echo 3 > /proc/sys/vm/drop_caches  && free -m


# Disk
df -ih				   #hdd inodes status 
for i in /var/spool/postfix/maildrop/*; do echo $i; find $i | wc -l; done   #crontab made huge inodes files 
ls | xargs -n 10 rm -rf                           #long time clean
## crontab lines add " > /dev/null 2>&1 " make no noise

find . -xdev -type f | cut -d "/" -f 2 | sort | uniq -c | sort -n   #

sar -d 1 3
iostat -d 1 3
iostat -dxk 1 5
iostat -x /dev/sda1 1 3
vmstat -d  | grep sda

fdisk 


# Net
netstat -i
ss -lnt 
sar -n DEV 1
sar -n EDEV 1     #show error info
sar -n SOCK 1



# speed up
/etc/init.d/cups stop && chkconfig cups off
setenforce 0  


### Finger
more /var/log/secure

ac -p
ac -d
last
lastlog


### analyze
sysctl -a 					# kernel info
env							 
dmesg  | more 
pmap -d [pid]				# show offset and device number


# Max open files
ulimit -SHn 65535
for pid in "ps axu | grep nginx| grep -v grep | awk '{print $2}'"
do
cat /proc/${pid}/limits | grep 'Max open files'
done

# system reboot
who -b
last reboot



### DIY
# repair disk
fsck -N /dev/sda1
# show lastest tail info
!ta 

# Kill All
ps -ef|grep [ProcessName]|grep -v grep|cut -c 9-15|xargs kill -9
pidof [ProcessName]

#vi
yy p			#copy one line
:%s/vivian/sky/g	#change all vivian to sky
:3,23>    # batch tab
ctrl+v G x  #delele rows

#goto line front   shift + 6
#goto line end     shift + 4

//close show line No.
：set nonumber

//show line No.
：set number

删除列
1.光标定位到要操作的地方。
2.CTRL+v 进入“可视 块”模式，选取这一列操作多少行。
3.d 删除。
 
插入列
插入操作的话知识稍有区别。例如我们在每一行前都插入"() "：
1.光标定位到要操作的地方。
2.CTRL+v 进入“可视 块”模式，选取这一列操作多少行。
3.SHIFT+i(I) 输入要插入的内容。
4.ESC 按两次，会在每行的选定的区域出现插入的内容。



## port
nc -v -w 2 10.10.7.88 22-3389   # scan port from 22-3389

##git
git rm --cached filename 
git commit -m "clean filename"
git push origin

#git push
without password
  git config --global credential.helper store

#Git global setup

git config --global user.name "user"
git config --global user.email "user@user.com"

#Create a new repository

git clone http://gitlab.user.com/user/hello-world.git
cd hello-world
touch README.md
git add README.md
git commit -m "add README"
git push -u origin master

#Existing folder

cd existing_folder
git init
git remote add origin http://gitlab.user.com/user/hello-world.git
git add .
git commit -m "Initial commit"
git push -u origin master

#Existing Git repository

cd existing_repo
git remote rename origin old-origin
git remote add origin http://gitlab.user.com/user/hello-world.git
git push -u origin --all
git push -u origin --tags

#gitlab change root password
cd YOUR_GITLAB_PATH && sudo gitlab-rails console production
u=User.where(id:1).first
u.password = 'YOUR_PASSWORD' u.password_confirmation = 'YOUR_PASSWORD'
u.save!


#git reset revert #https://kiwenlau.com/2018/01/24/git-rollback-tutorial/
git log
git revert HEAD






## zabbix
./zabbix_get -s 127.0.0.1 -p 10050 -k "system.cpu.load[all,avg15]"  # check zabbix work status


## rpcbind
#-# ipv6 disable caused rpcbind start failed: Address family not supported by protocol
sudo sed -i 's/^ListenStream=\[/#ListenStream=\[/' /etc/systemd/system/sockets.target.wants/rpcbind.socket && cat /etc/systemd/system/sockets.target.wants/rpcbind.socket
systemctl daemon-reload && systemctl restart rpcbind.service && systemctl status rpcbind.service


## http
# show http_code No.
curl -I -m 10 -o /dev/null -s  -w %{http_code} http://baidu.com   #return status


## shell
# if
if ［ 1 -ne 1 ］;then
...
fi

-eq           //equal
-ne           //no equal
-gt           //greater than
-lt           //lesser than
-ge           //greater and equal
-le           //lesser and equal


# color -1
RED_COLOR='\E[1;31m'  #红
GREEN_COLOR='\E[1;32m' #绿
YELOW_COLOR='\E[1;33m' #黄
BLUE_COLOR='\E[1;34m'  #蓝
PINK='\E[1;35m'      #粉红
#需要使用echo -e
echo -e  "${RED_COLOR}======red color======${RES}"
# color -2
echo -e "\033[1;32m ======red color====== "


[bash]
ctrl + w    # delete forward word

# Regex  useful matching
/^[a-z0-9_-\]{3,16}$/    username
/^[a-z0-9_-\]{6,18}$/    password
/^([a-z0-9_\.-\]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/   email






