efficiency
time [CMD] # show do this cmd cost times

whatis
# CPU physical/cpu cores/total
cat /proc/cpuinfo |grep "physical id" | sort | uniq | wc -l    
cat /proc/cpuinfo | grep "cpu cores" | uniq
cat /proc/cpuinfo | grep "processor" | wc -l
# Ethernet controller
lspci | grep Ether

# Disk Type
df -Th
mount | grep "^/dev"  
lsblk -f 
blkid /dev/sda1
file -sL /dev/sda1
grep ^ /sys/block/*/queue/rotational   #return 1 is HDD else SSD

#OS
cat /etc/issue 
#kernel
uname -r
#mod list
lsmod
#hostname
cat /etc/sysconfig/network | grep HOSTNAME  | cut -c 10-30
hostnamectl -set hostname HOSTNAME
#IP
hostname -i
ifconfig|grep -E "([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})" | awk '{print $2}' | cut -d ":" -f2
#DNS
cat /etc/resolv.conf | grep nameserver
#PortServices
netstat -antlp
#runtime status 
systemctl status
#FQDN
hostname -f



# history 
## OS starting time
date -d "$(awk -F. '{print $1}' /proc/uptime) second ago" +"%Y-%m-%d %H:%M:%S" 
## OS running time
cat /proc/uptime| awk -F. '{run_days=$1 / 86400;run_hour=($1 % 86400)/3600;run_minute=($1 % 3600)/60;run_second=$1 % 60;printf("Runningï¼š%dD%dT%dM%dS",run_days,run_hour,run_minute,run_second)}'

# history size
cat /etc/profile | grep "^HISTSIZE"

# history without number
history | cut -c 28-

Bigger

#Files
du -s * | sort -nr | sed 1q | awk {'print $2'}
du -sh * | sort -n
ls -l|sort -nr +4 -5
##
ls -sh
du -sh
### find group floders file contents
grep -R --include="*.php" "/opt/zbox" /home/app

#Folder
find -type f -exec stat -c "%s %n" {} \; | sort -nr | sed 3q | awk '{print $2}'





Last-Time

#Last edit
find ./ -mtime -1 -type f -exec ls -l {} \; | awk '{print $9}'

find ./ -mtime -1 -type f -exec rm {} \; 


#Create Swapfile to EX swap 
dd if=/dev/zero of=/data/swapfile bs=1024 count=65535
mkswap /data/swapfile -f
/sbin/swapon /data/swapfile 
cat >> /etc/fstab
/data/swapfile	none	swap	sw	0	0
#remove swapfile
/sbin/swapoff /data/swapfile 






### capability ###
yum info sysstat

# Proc 
pidstat 1				   #Each Time Get CPU 
pstree -pc [Pro name]
lsof -c  [Pro name]        #Show Pro open files
lsof -g [gid]			   #Show group id open files
lsof -g [pid]			   #show PID open files

lsof -i :[port number]     #show which app use this port
lsof -i tcp:[port number]  #port Pro info
lsof -i udp@127.0.0.1:123

pgrep -lo [Pro]			   #Find PID
pgrep -f [Pro]			   #Find Pro All PID


#CPU
vmstat
sar -u 1				   #Total CPU info
mpstat -P ALL 1			   #Each CPU info
sar -P 0 				   #No. 0 CPU info 
iostat -c				   
uptime



sar -P [cpu count NO.]
sar -r
sar -d



# memory
free -m
free -bs 1				   
watch -n 1 -d free		   #watch iostat vmstat 
sar -r 1 3				   #show AVG 
ps -aux | sort -k4nr | head -10	   #top 10

# Disk
df -ih				   #hdd inodes status 
for i in /var/spool/postfix/maildrop/*; do echo $i; find $i | wc -l; done   #crontab made huge inodes files 
ls | xargs -n 10 rm -rf                           #long time clean
## crontab lines add " > /dev/null 2>&1 " make no noise

find . -xdev -type f | cut -d "/" -f 2 | sort | uniq -c | sort -n   #

sar -d 1 3
iostat -d 1 3
iostat -dxk 1 5
iostat -x /dev/sda1 1 3
vmstat -d  | grep sda

fdisk 


# Net
netstat -i
sar -n DEV 1
sar -n EDEV 1     #show error info
sar -n SOCK 1



# speed up
/etc/init.d/cups stop && chkconfig cups off
setenforce 0  


### Finger
ac -p
ac -d
last


### analyze
sysctl -a 					# kernel info
env							 
dmesg  | more 
pmap -d [pid]				# show offset and device number


# Max open files
ulimit -SHn 65535
for pid in "ps axu | grep nginx| grep -v grep | awk '{print $2}'"
do
cat /proc/${pid}/limits | grep 'Max open files'
done




### DIY
# repair disk
fsck -N /dev/sda1
# show lastest tail info
!ta 

# Kill All
ps -ef|grep [ProcessName]|grep -v grep|cut -c 9-15|xargs kill -9


#VI
yy p			#copy one line
:%s/vivian/sky/g	#change all vivian to sky




## port
nc -v -w 2 10.10.7.88 22-3389   # scan port from 22-3389


## zabbix
./zabbix_get -s 127.0.0.1 -p 10050 -k "system.cpu.load[all,avg15]"  # check zabbix work status



